<<<<<<< HEAD:team2/.github/workflows/deploy.yml
name: CI/CD Pipeline
=======
name: Deploy to EC2
>>>>>>> 0a51a6006f37faeb03845e7b7489edcaa3dd6ecd:.github/workflows/deploy.yml

on:
  push:
    branches:
<<<<<<< HEAD:team2/.github/workflows/deploy.yml
      - main  # main 브랜치에 push될 때
=======
      - main
>>>>>>> 0a51a6006f37faeb03845e7b7489edcaa3dd6ecd:.github/workflows/deploy.yml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Docker 로그인 (DockerHub 예시)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t myapp:latest .

      # 4. Docker 이미지 Push
      - name: Push Docker image
        run: docker tag myapp:latest leerura/myapp:latest
      - run: docker push leerura/myapp:latest

      # 5. EC2에 SSH 접속 후 pull & restart
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/myapp   # docker-compose.yml 있는 디렉토리로 이동
<<<<<<< HEAD:team2/.github/workflows/deploy.yml
            sudo docker compose pull      # 최신 이미지 가져오기
            sudo docker compose down      # 기존 컨테이너 중지
            sudo docker compose up -d     # 새 컨테이너 실행
=======
            docker-compose pull      # 최신 이미지 가져오기
            docker-compose down      # 기존 컨테이너 중지
            docker-compose up -d     # 새 컨테이너 실행
>>>>>>> 0a51a6006f37faeb03845e7b7489edcaa3dd6ecd:.github/workflows/deploy.yml
